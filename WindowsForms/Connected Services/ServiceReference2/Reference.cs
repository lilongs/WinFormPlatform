//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

using System.Collections.Generic;

namespace WindowsForms.ServiceReference2 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference2.IRoleManagerInterface")]
    public interface IRoleManagerInterface {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoleManagerInterface/GetAllRoleInfo", ReplyAction="http://tempuri.org/IRoleManagerInterface/GetAllRoleInfoResponse")]
        System.Data.DataTable GetAllRoleInfo(string rolename);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoleManagerInterface/GetAllRoleInfo", ReplyAction="http://tempuri.org/IRoleManagerInterface/GetAllRoleInfoResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetAllRoleInfoAsync(string rolename);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoleManagerInterface/GetRoleMenu", ReplyAction="http://tempuri.org/IRoleManagerInterface/GetRoleMenuResponse")]
        System.Data.DataTable GetRoleMenu(int roleid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoleManagerInterface/GetRoleMenu", ReplyAction="http://tempuri.org/IRoleManagerInterface/GetRoleMenuResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetRoleMenuAsync(int roleid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoleManagerInterface/UpdateRoleMenu", ReplyAction="http://tempuri.org/IRoleManagerInterface/UpdateRoleMenuResponse")]
        int UpdateRoleMenu(int roleid, List<int> listMenuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoleManagerInterface/UpdateRoleMenu", ReplyAction="http://tempuri.org/IRoleManagerInterface/UpdateRoleMenuResponse")]
        System.Threading.Tasks.Task<int> UpdateRoleMenuAsync(int roleid, List<int> listMenuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoleManagerInterface/InsertRoleInfo", ReplyAction="http://tempuri.org/IRoleManagerInterface/InsertRoleInfoResponse")]
        bool InsertRoleInfo(string rolename, string remark, string createby);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoleManagerInterface/InsertRoleInfo", ReplyAction="http://tempuri.org/IRoleManagerInterface/InsertRoleInfoResponse")]
        System.Threading.Tasks.Task<bool> InsertRoleInfoAsync(string rolename, string remark, string createby);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoleManagerInterface/UpdateRoleInfo", ReplyAction="http://tempuri.org/IRoleManagerInterface/UpdateRoleInfoResponse")]
        bool UpdateRoleInfo(int roleid, string rolename, string remark, string updateby);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoleManagerInterface/UpdateRoleInfo", ReplyAction="http://tempuri.org/IRoleManagerInterface/UpdateRoleInfoResponse")]
        System.Threading.Tasks.Task<bool> UpdateRoleInfoAsync(int roleid, string rolename, string remark, string updateby);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRoleManagerInterfaceChannel : WindowsForms.ServiceReference2.IRoleManagerInterface, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RoleManagerInterfaceClient : System.ServiceModel.ClientBase<WindowsForms.ServiceReference2.IRoleManagerInterface>, WindowsForms.ServiceReference2.IRoleManagerInterface {
        
        public RoleManagerInterfaceClient() {
        }
        
        public RoleManagerInterfaceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RoleManagerInterfaceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RoleManagerInterfaceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RoleManagerInterfaceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataTable GetAllRoleInfo(string rolename) {
            return base.Channel.GetAllRoleInfo(rolename);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetAllRoleInfoAsync(string rolename) {
            return base.Channel.GetAllRoleInfoAsync(rolename);
        }
        
        public System.Data.DataTable GetRoleMenu(int roleid) {
            return base.Channel.GetRoleMenu(roleid);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetRoleMenuAsync(int roleid) {
            return base.Channel.GetRoleMenuAsync(roleid);
        }
        
        public int UpdateRoleMenu(int roleid, List<int> listMenuid) {
            return base.Channel.UpdateRoleMenu(roleid, listMenuid);
        }
        
        public System.Threading.Tasks.Task<int> UpdateRoleMenuAsync(int roleid, List<int> listMenuid) {
            return base.Channel.UpdateRoleMenuAsync(roleid, listMenuid);
        }
        
        public bool InsertRoleInfo(string rolename, string remark, string createby) {
            return base.Channel.InsertRoleInfo(rolename, remark, createby);
        }
        
        public System.Threading.Tasks.Task<bool> InsertRoleInfoAsync(string rolename, string remark, string createby) {
            return base.Channel.InsertRoleInfoAsync(rolename, remark, createby);
        }
        
        public bool UpdateRoleInfo(int roleid, string rolename, string remark, string updateby) {
            return base.Channel.UpdateRoleInfo(roleid, rolename, remark, updateby);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateRoleInfoAsync(int roleid, string rolename, string remark, string updateby) {
            return base.Channel.UpdateRoleInfoAsync(roleid, rolename, remark, updateby);
        }
    }
}
